#!/usr/bin/env bash
#vim: sw=2 ts=2 sts=2:

set -e -o pipefail
progname="$(basename $0)"

info() {
  echo "$progname: $*"
}

usage() {
cat <<EOHELP
USAGE:
  $progname [OPTIONS] [PATH]

OPTIONS:
  PATH     Directory path to scan. Default to current.
  -f       Force. Remove existing scan and re-run.
  -h       Show this help.

DESCRIPTION:

Scan the PATHS for files of interest to CIDB. Artifacts we can collect and
logs, junit results we can parse.
EOHELP
  exit 0
}

while getopts ":hf" opt; do
  case ${opt} in
    h ) usage
      ;;
    f ) FORCE=true
      ;;
    \? ) usage
      ;;
  esac
done
shift $((OPTIND -1))

SCAN_DIR="."
if [ -n "$1" ]; then
  SCAN_DIR="$1"
  shift
fi

if [ ! -d "$SCAN_DIR" ]; then
  info Scan directory not found: "$SCAN_DIR"
  exit 10
fi

scan() {
  export CIDB_DATA=cidb
  if [ -d "$CIDB_DATA" ]; then
    if [[ $FORCE == true ]]; then
      info Removing existing scan with force
      rm -rf "$CIDB_DATA"
    else
      info Cant scan already scanned directory without force
      exit 10
    fi
  fi
  mkdir -p "$CIDB_DATA"

  cidb-data --put build.scan-start-time "$(date +%Y-%m-%dT%H:%M:%S%z)"

  env > "$CIDB_DATA"/env.dump
  git rev-parse HEAD > "$CIDB_DATA"/HEAD

  export CIDB_BUILDER=general
  if [ -f build.xml ]; then
    CIDB_BUILDER=jenkins-build
  elif [[ -n $JENKINS_HOME ]]; then
    CIDB_BUILDER=jenkins
  elif [[ -n $GITHUB_WORKFLOW ]]; then
    CIDB_BUILDER=github
  fi
  info Scanning $CIDB_BUILDER build
  cidb-data --put build.builder "$CIDB_BUILDER"
  scan-"$CIDB_BUILDER"

  cidb-data --put build.scan-end-time "$(date +%Y-%m-%dT%H:%M:%S%z)"
}

scan-jenkins-build() {
  info Scanning Jenkins build dir
  info TODO: parse build.xml
  if [ -f junitResult.xml ]; then
    info Found junit results
    junitResult2junit junitResult.xml | cidb-junit
  fi
}

scan-jenkins() {
  info Scanning Jenkins workspace
}

scan-github() {
  info Scanning GitHub Workflow run
}

scan-general() {
  info Scanning general build directory
}

info Scanning "$SCAN_DIR"
cd "$SCAN_DIR"
scan
cat cidb/build.yaml
